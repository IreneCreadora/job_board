{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,mCCOAC,eAAgCC,GAC9B,IACE,MAAMC,EAAiBC,aAAaC,QAAQH,GAEtCI,QDLHL,gBAAsCM,GAC3CA,EAAEC,KACFA,EAAIC,MACJA,EAAKC,MACLA,EAAKC,MACLA,EAAKC,OACLA,EAAMC,QACNA,EAAOC,SACPA,EAAQC,SACRA,EAAQC,SACRA,EAAQC,UACRA,EAASC,UACTA,EAASC,YACTA,EAAWC,gBACXA,IAiBA,MAAO,uCAAuCb,6aAMjBI,8CArBV,EAAAZ,EAAAsB,gBAAe,IAAIC,KAAKL,GAAYK,KAAKC,MAAO,CACjEC,WAAW,sHAEWZ,EAAOa,WAAW,IAAK,0EA4BbN,mQErD7B,SAA8BO,GACnC,IAAIC,EAAa,GAEjB,IAAK,IAAIC,KAAQF,EAAK,CACpB,MAAMG,EAAa,aAAaD,yCAChCD,EAAWG,KAAKD,E,CAElB,OAAOF,C,CFmBgB,CAAqBX,GAAUe,KAAK,kOG1BtD,SAA+BL,GACpC,IAAIC,EAAa,GAEjB,IAAK,IAAIC,KAAQF,EAAK,CACpB,MAAMG,EAAa,0BAA0BD,SAC7CD,EAAWG,KAAKD,E,CAElB,OAAOF,C,CHoBuB,CAAsBP,GAAiBW,KAAK,iFI3BrE,SAAwBL,GAC7B,IAAIC,EAAa,GAEjB,IAAK,IAAIC,KAAQF,EAAK,CACpB,MAAMG,EAAa,wBAAwBD,SAC3CD,EAAWG,KAAKD,E,CAElB,OAAOF,C,CJqBgB,CAAeb,GAAUiB,KAAK,gQAqDnBvB,kGA9CT,EAAAwB,EAAAC,0BAgDgEpB,kDAEzDH,kDAEAD,sD,CC5ET,CAAuByB,KAAKC,MAAMhC,IAEvDiC,EAAAC,KAAKC,oBAAoBC,mBAAmB,YAAajC,E,CACzD,MAAOkC,GACPC,QAAQC,IAAIF,E,EAXdG,CAAiBvC,aAAaC,QAAQ","sources":["src/js/createMarkupCurrentJob.js","src/job-details.js","src/js/renderPicturesMarkup.js","src/js/renderEmploymentTypes.js","src/js/renderBenefits.js"],"sourcesContent":["import { formatDistance } from 'date-fns';\nimport { renderEmploymentTypes } from './renderEmploymentTypes';\nimport { renderBenefits } from './renderBenefits';\nimport { renderPicturesMarkup } from './renderPicturesMarkup';\nimport { getLocationAddress } from './getLocationAddress';\n\nexport async function createMarkupCurrentJob({\n  id,\n  name,\n  email,\n  phone,\n  title,\n  salary,\n  address,\n  benefits,\n  location,\n  pictures,\n  createdAt,\n  updatedAt,\n  description,\n  employment_type,\n}) {\n  const postedTime = formatDistance(new Date(createdAt), Date.now(), {\n    addSuffix: true,\n  });\n  const convertedSalary = salary.replaceAll('k', ' 000');\n  const picturesMarkup = renderPicturesMarkup(pictures).join('');\n  const employmentTypesMarkup = renderEmploymentTypes(employment_type).join('');\n  const benefitsMarkup = renderBenefits(benefits).join('');\n\n  // const jobAddress = await getLocationAddress( location.lat , location.long );\n  // В теорії тут у функцію я передаю дані з бекенду, але цифри які приходять, нажаль не валідні,\n  // я провела тест і всі дані які приходили в різний час, в гугл пошуку видавали координати океанів,\n  // тому країни і міста там у відповіді немає.\n  // Для того щоб показати мій варіант обробки даних, я використала валідні координати.\n  const jobAddress = await getLocationAddress();\n\n  return `<div class=\"vacancy__item\" data-id=\"${id}\">\n  <div class=\"vacancy__links\">\n  <button class=\"vacancy__btn\" aria-label=\"Save\"><i class=\"fa-regular fa-bookmark\"></i> Save to my list</button>\n  <button class=\"vacancy__btn\" aria-label=\"Share\"><i class=\"fa-solid fa-share-nodes\"></i> Share</button></div>\n  <button class=\"vacancy__btn-apply desktop-btn-apply\" aria-label=\"Apply now\">Apply now</button>\n  <div class=\"main-info__wrapper\">\n  <h2 class=\"vacancy__title\">${title}</h2>\n  <p class=\"vacancy__time\">Posted ${postedTime}\n  </p>\n  <div class=\"salary__wrapper\">\n  <span>Brutto, per year\n  </span>\n  <p class=\"vacancy__salary\"> € ${convertedSalary}\n  </p>\n  </div>\n  </div>\n  <p class=\"vacancy__description\">${description}\n  </p>\n  <button class=\"vacancy__btn-apply\" aria-label=\"Apply now\">Apply now</button>\n  <div class=\"vacancy__advantages\">\n  <div>\n      <h3 class=\"vacancy__image-title\">Attached images\n      </h3>\n      <hr />  \n      <div class=\"vacancy__image\">${picturesMarkup}\n      </div>\n      </div>\n      <div class=\"vacancy__info\">\n      <h3 class=\"vacancy__info-title\">Additional info\n      </h3>\n      <hr />      \n      <p class=\"vacancy__info-text\">Employment type</p>\n      <ul>${employmentTypesMarkup}\n      </ul>\n      <p class=\"vacancy__info-text\">Benefits</p>\n      <ul>${benefitsMarkup}  \n      </ul>\n      </div>\n      </div>\n      <div class=\"vacancy__contacts\">\n      <h3 class=\"vacancy__contacts-title\">Contacts\n      <hr />\n      </h3>      \n      <div class=\"vacancy__contacts-wrapper\">\n      <p class=\"vacancy__company\">${name}\n      </p>\n      <p class=\"vacancy__address\"><i class=\"fa-solid fa-location-dot\"></i>${jobAddress}, ${address}\n      </p>\n      <p class=\"vacancy__phone\">${phone}\n      </p>\n      <p class=\"vacancy__email\">${email}\n      </p>\n      </div> \n      </div>\n  </div>`;\n}\n","import { createMarkupCurrentJob } from './js/createMarkupCurrentJob';\nimport { refs } from './js/refs.js';\n\nfunction openPage() {\n  renderJobDetails(localStorage.getItem('currentID'));\n}\n\nasync function renderJobDetails(currentId) {\n  try {\n    const currentJobData = localStorage.getItem(currentId);\n\n    const markup = await createMarkupCurrentJob(JSON.parse(currentJobData));\n\n    refs.jobDetailsContainer.insertAdjacentHTML('beforeend', markup);\n  } catch (error) {\n    console.log(error);\n  }\n}\nopenPage();\n","export function renderPicturesMarkup(arr) {\n  let markupList = [];\n\n  for (let elem of arr) {\n    const elemMarkup = `<img src=\"${elem}\" alt=\"Company image\" loading=\"lazy\">`;\n    markupList.push(elemMarkup);\n  }\n  return markupList;\n}\n","export function renderEmploymentTypes(arr) {\n  let markupList = [];\n\n  for (let elem of arr) {\n    const elemMarkup = `<li class=\"employment\">${elem}</li>`;\n    markupList.push(elemMarkup);\n  }\n  return markupList;\n}\n","export function renderBenefits(arr) {\n  let markupList = [];\n  \n  for (let elem of arr) {\n    const elemMarkup = `<li class=\"benefits\">${elem}</li>`;\n    markupList.push(elemMarkup);\n  }\n  return markupList;\n}\n"],"names":["$46BsY","parcelRequire","async","currentId","currentJobData","localStorage","getItem","markup","id","name","email","phone","title","salary","address","benefits","location","pictures","createdAt","updatedAt","description","employment_type","formatDistance","Date","now","addSuffix","replaceAll","arr","markupList","elem","elemMarkup","push","join","$jN9CZ","getLocationAddress","JSON","parse","$krGWQ","refs","jobDetailsContainer","insertAdjacentHTML","error","console","log","$56b3e1aef12a1d75$var$renderJobDetails"],"version":3,"file":"job-details.66517207.js.map"}